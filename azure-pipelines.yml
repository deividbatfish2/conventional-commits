trigger:
  - main
pr:
  - main
  - develop

pool:
  vmImage: 'ubuntu-20.04'

variables:
  - name: applicationProjectPath
    value: '**/*.Application/*.csproj'
  - name: unitTestProjectPath
    value: '**/*.UnitTest/*.csproj'
  - name: buildConfiguration
    value: 'release'

jobs:
 - job: Run_Unit_Tests_on_PR_to_develop
   # Run only on PRs to develop since the pull request origin don't be the main branch
   condition: and(eq(variables['Build.Reason'], 'PullRequest'), and(eq(variables['system.pullRequest.targetBranch'], 'develop'), ne(variables['system.pullRequest.sourceBranch'], 'main')))
   steps:
    
    - task: UseDotNet@2
      displayName: Use dotnet core SDK 5
      inputs:
        packageType: sdk
        version: 5.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    - task: DotNetCoreCLI@2
      displayName: Restore Test Project
      inputs:
        command: 'restore'
        projects: '$(unitTestProjectPath)'
    
    - task: DotNetCoreCLI@2
      displayName: Build Test Project
      inputs:
        command: 'build'
        projects: '$(unitTestProjectPath)'
        arguments: --no-restore --configuration $(buildConfiguration)
    
    - task: DotNetCoreCLI@2
      displayName: Run Unit Tests
      inputs:
        command: 'test'
        projects: '$(unitTestProjectPath)'
        arguments: --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
        publishTestResults: true

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage report'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/*/coverage.cobertura.xml'
  
 - job: Build_Application
   # Run only on PRs to develop since the pull request origin don't be the main branch
   condition: and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['system.pullRequest.targetBranch'], 'main'))
   steps:
    - task: UseDotNet@2
      displayName: Use dotnet core SDK 5
      inputs:
        packageType: sdk
        version: 5.x
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: Install versionize
      inputs:
        command: 'custom'
        custom: 'tool install --global Versionize'

    - task: DotNetCoreCLI@2
      displayName: Bumped Version
      inputs:
        command: 'custom'
        custom: 'versionize'
    
    - task: DotNetCoreCLI@2
      displayName: Restore Test Project
      inputs:
        command: 'restore'
        projects: '$(unitTestProjectPath)'
    
    - task: DotNetCoreCLI@2
      displayName: Build Test Project
      inputs:
        command: 'build'
        projects: '$(unitTestProjectPath)'
        arguments: --no-restore --configuration $(buildConfiguration)
    
    - task: DotNetCoreCLI@2
      displayName: Run Unit Tests
      inputs:
        command: 'test'
        projects: '$(unitTestProjectPath)'
        arguments: --collect:"XPlat Code Coverage" --DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
        publishTestResults: true

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage report'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/*/coverage.cobertura.xml'
    
    - task: DotNetCoreCLI@2
      displayName: Restore Application Project
      inputs:
        command: 'restore'
        projects: '$(applicationProjectPath)'
    
    - task: DotNetCoreCLI@2
      displayName: Build Application Project
      inputs:
        command: 'build'
        projects: '$(applicationProjectPath)'
        arguments: --no-restore --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/GatewayPagamentos.Application
    
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/GatewayPagamentos.Application'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    
    - task: PowerShell@2
      displayName: Update release
      inputs:
        targetType: 'inline'
        script: 'git push --follow-tags origin $(variables[''System.PullRequest.SourceBranch''])'
      
      